@model TexasTRInventory.Models.AccountViewModels.SetPasswordViewModel
@{
    ViewData["Title"] = "Set Password";
}

<form asp-controller="Account" asp-action="SetPassword" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
    <h4>Set your password</h4>
    <hr />
    <div asp-validation-summary="All" class="text-danger"></div>
    <div class="form-group">
        <label asp-for="NewPassword" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <input asp-for="NewPassword" class="form-control" />
            <span asp-validation-for="NewPassword" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group">
        <label asp-for="ConfirmPassword" class="col-md-2 control-label"></label>
        <div class="col-md-10">
            <input asp-for="ConfirmPassword" class="form-control" />
            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-default">Set password</button>
        </div>
    </div>
    @*9.15.17 Imitating ResetPassword. This passes the userID and code from the URL to the post controller*@
    <input asp-for="Code" type="hidden" />
    <input asp-for="UserID" type="hidden" />
</form>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
